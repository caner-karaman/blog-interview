/* eslint-disable @next/next/google-font-display */
/* eslint-disable @next/next/no-page-custom-font */
import React, {useEffect} from 'react';
import type { NextPage } from 'next';
import { gql } from 'graphql-tag';
import { useQuery } from '@apollo/client';
import Head from 'next/head';
import Header from "../components/header/Header";
import Sidebar from '../components/sidebar/Sidebar';
import BlogItem from '../components/blogItem/BlogItem';
import { ItemWrapper, StyledContainer, Main, Articles, FilterWrapper } from './App.styles';
import { useRouter } from 'next/router';
import Pagination from '../components/pagination/Pagination';

const USERS_POSTS_QUERY = gql`
  query USERS_POSTS_QUERY {
    users{
      data{
        name
        username
        email
        id
        posts {
          data {
            title
            id
            body
            comments {
              data {
                body 
                name
                id
              }
            }
          }
        }
      }
    }
  }
`;

const SINGLE_USER_QUERY = gql`
  query SINGLE_USER_QUERY($id: ID!) {
    user(id: $id) {
        name
        username
        email
        id
        posts {
          data {
            title
            id
            body
            comments {
              data {
                body 
                name
                id
              }
            }
          }
        }
    }
  }
`;

const Home: NextPage = () => {
  const { query } = useRouter();
  const id = query?.user;
  const page = query?.page;
  const Query = id ? SINGLE_USER_QUERY : USERS_POSTS_QUERY;
  const QUERY_OPTIONS = {
    variables: {
      id
    }
  }
  const { data, error, loading } = useQuery<{users?: UserPostsResponse} & {user?: UserResponse}>(Query, QUERY_OPTIONS);
  
  if(loading) return <p>Loading...</p>
  if(error) return <p>{`error: ${error}`}</p>

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto" />
      </Head>
      <Header></Header>
      <StyledContainer>
        <Sidebar />
        <Main>
          <FilterWrapper>
            <Pagination pageCount={'10'} page={page || '1'}></Pagination>
          </FilterWrapper>
          <Articles>
            {data?.users?.data ? data.users.data.map((user) => user.posts.data.map((post) => (
              <ItemWrapper key={post.id}>
                <BlogItem username={user.name} post={post} />
              </ItemWrapper>
            ))) : data?.user?.posts.data.map((post) => (
              <ItemWrapper key={post.id}>
                <BlogItem username={data?.user?.name ? data?.user?.name : ''} post={post} />
              </ItemWrapper>
            ))}
          </Articles>
        </Main>
      </StyledContainer>
    </div>
  )
}

export default Home
